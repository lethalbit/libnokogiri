<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structlibnokogiri_1_1pcap_1_1file__header__t" kind="struct" language="C++" prot="public" final="yes">
    <compoundname>libnokogiri::pcap::file_header_t</compoundname>
    <includes refid="header_8hh" local="no">header.hh</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structlibnokogiri_1_1pcap_1_1file__header__t_1a40dea01fe03159bc73a8926ac56828ce" prot="private" static="no" mutable="no">
        <type><ref refid="namespacelibnokogiri_1_1pcap_1a9b6ed66d560c22eb5ddb64f72aa6c656" kindref="member">pcap_variant_t</ref></type>
        <definition>pcap_variant_t libnokogiri::pcap::file_header_t::_variant</definition>
        <argsstring></argsstring>
        <name>_variant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="89" column="1" bodyfile="pcap/header.hh" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibnokogiri_1_1pcap_1_1file__header__t_1a7c52ada14ef3811600151f9e1c0d74aa" prot="private" static="no" mutable="no">
        <type><ref refid="structlibnokogiri_1_1version__t" kindref="compound">version_t</ref></type>
        <definition>version_t libnokogiri::pcap::file_header_t::_version</definition>
        <argsstring></argsstring>
        <name>_version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="90" column="1" bodyfile="pcap/header.hh" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibnokogiri_1_1pcap_1_1file__header__t_1a8bf6552f1c10bb96d3011f2dcd6b6daa" prot="private" static="no" mutable="no">
        <type>std::int32_t</type>
        <definition>std::int32_t libnokogiri::pcap::file_header_t::_tz_offset</definition>
        <argsstring></argsstring>
        <name>_tz_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="91" column="1" bodyfile="pcap/header.hh" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibnokogiri_1_1pcap_1_1file__header__t_1aa1853b161fb92358f1f4a204c90b2193" prot="private" static="no" mutable="no">
        <type>std::uint32_t</type>
        <definition>std::uint32_t libnokogiri::pcap::file_header_t::_timestamp_figs</definition>
        <argsstring></argsstring>
        <name>_timestamp_figs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="92" column="1" bodyfile="pcap/header.hh" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibnokogiri_1_1pcap_1_1file__header__t_1a2752da22e31dd414bb030a0d6032251c" prot="private" static="no" mutable="no">
        <type>std::uint32_t</type>
        <definition>std::uint32_t libnokogiri::pcap::file_header_t::_pcklen_max</definition>
        <argsstring></argsstring>
        <name>_pcklen_max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="93" column="1" bodyfile="pcap/header.hh" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibnokogiri_1_1pcap_1_1file__header__t_1a22f5055178b1fbf5e96e2b6083b3e41f" prot="private" static="no" mutable="no">
        <type><ref refid="namespacelibnokogiri_1a2a757e6afcdf6b68678d6e0693eda59c" kindref="member">link_type_t</ref></type>
        <definition>link_type_t libnokogiri::pcap::file_header_t::_network</definition>
        <argsstring></argsstring>
        <name>_network</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="94" column="1" bodyfile="pcap/header.hh" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1file__header__t_1a0070077193cf63cf880682939c677d52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr libnokogiri::pcap::file_header_t::file_header_t</definition>
        <argsstring>() noexcept</argsstring>
        <name>file_header_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="96" column="1" bodyfile="pcap/header.hh" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1file__header__t_1a29ce345c0f92aeee73c51bc120a1f395" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr libnokogiri::pcap::file_header_t::file_header_t</definition>
        <argsstring>(pcap_variant_t variant, version_t version, std::int32_t tz_offset, std::uint32_t ts_figs, std::uint32_t pcklen, link_type_t network) noexcept</argsstring>
        <name>file_header_t</name>
        <param>
          <type><ref refid="namespacelibnokogiri_1_1pcap_1a9b6ed66d560c22eb5ddb64f72aa6c656" kindref="member">pcap_variant_t</ref></type>
          <declname>variant</declname>
        </param>
        <param>
          <type><ref refid="structlibnokogiri_1_1version__t" kindref="compound">version_t</ref></type>
          <declname>version</declname>
        </param>
        <param>
          <type>std::int32_t</type>
          <declname>tz_offset</declname>
        </param>
        <param>
          <type>std::uint32_t</type>
          <declname>ts_figs</declname>
        </param>
        <param>
          <type>std::uint32_t</type>
          <declname>pcklen</declname>
        </param>
        <param>
          <type><ref refid="namespacelibnokogiri_1a2a757e6afcdf6b68678d6e0693eda59c" kindref="member">link_type_t</ref></type>
          <declname>network</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="101" column="1" bodyfile="pcap/header.hh" bodystart="101" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1file__header__t_1a8f8b2b0ab6e3d947863466876930acd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>libnokogiri::pcap::file_header_t::file_header_t</definition>
        <argsstring>(const file_header_t &amp;)=delete</argsstring>
        <name>file_header_t</name>
        <param>
          <type>const <ref refid="structlibnokogiri_1_1pcap_1_1file__header__t" kindref="compound">file_header_t</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1file__header__t_1a97b3fef9925718e72ec69c8ad896bfb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlibnokogiri_1_1pcap_1_1file__header__t" kindref="compound">file_header_t</ref> &amp;</type>
        <definition>file_header_t&amp; libnokogiri::pcap::file_header_t::operator=</definition>
        <argsstring>(const file_header_t &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structlibnokogiri_1_1pcap_1_1file__header__t" kindref="compound">file_header_t</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1file__header__t_1a16a6ced1c65aafb6562f647b76604eec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>libnokogiri::pcap::file_header_t::file_header_t</definition>
        <argsstring>(file_header_t &amp;&amp;)=default</argsstring>
        <name>file_header_t</name>
        <param>
          <type><ref refid="structlibnokogiri_1_1pcap_1_1file__header__t" kindref="compound">file_header_t</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1file__header__t_1a3e1e2887f1387173b8bc8ad22517bdfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlibnokogiri_1_1pcap_1_1file__header__t" kindref="compound">file_header_t</ref> &amp;</type>
        <definition>file_header_t&amp; libnokogiri::pcap::file_header_t::operator=</definition>
        <argsstring>(file_header_t &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structlibnokogiri_1_1pcap_1_1file__header__t" kindref="compound">file_header_t</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1file__header__t_1a52c221285b6e40d34e785561bbef8f63" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacelibnokogiri_1_1pcap_1a9b6ed66d560c22eb5ddb64f72aa6c656" kindref="member">pcap_variant_t</ref></type>
        <definition>pcap_variant_t libnokogiri::pcap::file_header_t::variant</definition>
        <argsstring>() const noexcept</argsstring>
        <name>variant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the type of pcap file this is. This is also the magic number for the file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="115" column="1" bodyfile="pcap/header.hh" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1file__header__t_1ab2b308414f764685b36eccd48545bfff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void libnokogiri::pcap::file_header_t::variant</definition>
        <argsstring>(const pcap_variant_t variant) noexcept</argsstring>
        <name>variant</name>
        <param>
          <type>const <ref refid="namespacelibnokogiri_1_1pcap_1a9b6ed66d560c22eb5ddb64f72aa6c656" kindref="member">pcap_variant_t</ref></type>
          <declname>variant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the type of pcap file this is. This is also the magic number for the file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="117" column="1" bodyfile="pcap/header.hh" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1file__header__t_1a8f5d56e0c357dd9a8d4148c331e5223e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlibnokogiri_1_1version__t" kindref="compound">version_t</ref></type>
        <definition>version_t libnokogiri::pcap::file_header_t::version</definition>
        <argsstring>() const noexcept</argsstring>
        <name>version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the pcap file version. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="121" column="1" bodyfile="pcap/header.hh" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1file__header__t_1a4158712947e8adb2936fa17ea0333187" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void libnokogiri::pcap::file_header_t::version</definition>
        <argsstring>(const version_t version) noexcept</argsstring>
        <name>version</name>
        <param>
          <type>const <ref refid="structlibnokogiri_1_1version__t" kindref="compound">version_t</ref></type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the pcap file version. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="123" column="1" bodyfile="pcap/header.hh" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1file__header__t_1a82e65553181db7fbb1d6d38fb7ab91d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t libnokogiri::pcap::file_header_t::timezone_offset</definition>
        <argsstring>() const noexcept</argsstring>
        <name>timezone_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the offset for the timezone in seconds relative to GMT. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="127" column="1" bodyfile="pcap/header.hh" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1file__header__t_1a4547526b226ca8a10b1539b59133ce3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void libnokogiri::pcap::file_header_t::timezone_offset</definition>
        <argsstring>(const std::int32_t tz_offset) noexcept</argsstring>
        <name>timezone_offset</name>
        <param>
          <type>const std::int32_t</type>
          <declname>tz_offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the offset for the timezone in seconds relative to GMT. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="129" column="1" bodyfile="pcap/header.hh" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1file__header__t_1a847b846fa2e02698b81d490378752e4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::uint32_t</type>
        <definition>std::uint32_t libnokogiri::pcap::file_header_t::timestamp_accuracy</definition>
        <argsstring>() const noexcept</argsstring>
        <name>timestamp_accuracy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the accuracy of the timestamps </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="133" column="1" bodyfile="pcap/header.hh" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1file__header__t_1a2286c25c16b34cab79cd6cecf8a22b18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void libnokogiri::pcap::file_header_t::timestamp_accuracy</definition>
        <argsstring>(const std::uint32_t ts_accuracy) noexcept</argsstring>
        <name>timestamp_accuracy</name>
        <param>
          <type>const std::uint32_t</type>
          <declname>ts_accuracy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the accuracy of the timestamps </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="135" column="1" bodyfile="pcap/header.hh" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1file__header__t_1a0785987b4eacff38c639e2b6b0746dd9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::uint32_t</type>
        <definition>std::uint32_t libnokogiri::pcap::file_header_t::max_packet_length</definition>
        <argsstring>() const noexcept</argsstring>
        <name>max_packet_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the maximum length a packet can be in this pcap file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="139" column="1" bodyfile="pcap/header.hh" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1file__header__t_1a246411e8af5b5bf72db3af082f9843c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void libnokogiri::pcap::file_header_t::max_packet_length</definition>
        <argsstring>(const std::uint32_t length) noexcept</argsstring>
        <name>max_packet_length</name>
        <param>
          <type>const std::uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the maximum length a packet can be in this pcap file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="141" column="1" bodyfile="pcap/header.hh" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1file__header__t_1ac96e39eb2628892ad874907b6ba9c85b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacelibnokogiri_1a2a757e6afcdf6b68678d6e0693eda59c" kindref="member">link_type_t</ref></type>
        <definition>link_type_t libnokogiri::pcap::file_header_t::link_type</definition>
        <argsstring>() const noexcept</argsstring>
        <name>link_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the link type for the packets that this pcap file contain. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="145" column="1" bodyfile="pcap/header.hh" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1file__header__t_1a3cfc12e8f5c82ca93168acf12925a6e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void libnokogiri::pcap::file_header_t::link_type</definition>
        <argsstring>(const link_type_t type) noexcept</argsstring>
        <name>link_type</name>
        <param>
          <type>const <ref refid="namespacelibnokogiri_1a2a757e6afcdf6b68678d6e0693eda59c" kindref="member">link_type_t</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the link type for the packets that this pcap file contain. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap/header.hh" line="147" column="1" bodyfile="pcap/header.hh" bodystart="147" bodyend="147"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>pcap file header </para>    </briefdescription>
    <detaileddescription>
<para>This is the header that is at the very beginning of a pcap file. It contains the magic numbers as well as various information related to the contents of the capture.</para><para>It&apos;s organized as follows:</para><para><programlisting><codeline><highlight class="normal"><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight></codeline>
<codeline><highlight class="normal"><sp/>0<sp/>1<sp/>2<sp/>3<sp/>4<sp/>5<sp/>6<sp/>7<sp/>0<sp/>1<sp/>2<sp/>3<sp/>4<sp/>5<sp/>6<sp/>7<sp/>0<sp/>1<sp/>2<sp/>3<sp/>4<sp/>5<sp/>6<sp/>7<sp/>0<sp/>1<sp/>2<sp/>3<sp/>4<sp/>5<sp/>6<sp/>7</highlight></codeline>
<codeline><highlight class="normal">+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</highlight></codeline>
<codeline><highlight class="normal">|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PCAP<sp/>Magic<sp/>Number<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</highlight></codeline>
<codeline><highlight class="normal">|<sp/><sp/><sp/><sp/><sp/><sp/>Major<sp/>Version<sp/>Number<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>Minor<sp/>Version<sp/>Number<sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</highlight></codeline>
<codeline><highlight class="normal">|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Timezone<sp/>GMT<sp/>Offset<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</highlight></codeline>
<codeline><highlight class="normal">|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Time-stamp<sp/>Accuracy<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</highlight></codeline>
<codeline><highlight class="normal">|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Max<sp/>Packet<sp/>Length<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</highlight></codeline>
<codeline><highlight class="normal">|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data<sp/>Link<sp/>Type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</highlight></codeline>
</programlisting></para><para><itemizedlist>
<listitem><para><computeroutput>PCAP Magic Number</computeroutput> - The 32-bit unsigned value is used to identify the type of pcap file and its endianness.</para></listitem><listitem><para><computeroutput>Major Version Number</computeroutput> &amp; <computeroutput>Minor Version Number</computeroutput> Two unsigned 16-bit values to indicate the version of the pcap</para></listitem><listitem><para><computeroutput>Timezone GMT Offset</computeroutput> - A signed 32-bit value which describes the timezone offset in seconds from GMT that this capture was taken at. (normally set to <computeroutput>0</computeroutput>)</para></listitem><listitem><para><computeroutput>Time-stamp Accuracy</computeroutput> - An unsigned 32-bit value describing the number of significant figures the timestamps have (normally <computeroutput>0</computeroutput>)</para></listitem><listitem><para><computeroutput>Max Packet Length</computeroutput> - An unsigned 32-bit value that represents the maximum number of octets saved per packet in this file. Packets larger than this value will be truncated.</para></listitem><listitem><para><computeroutput>Data Link Type</computeroutput> - Am unsigned 32-bit value describing the link layer. See <ref refid="namespacelibnokogiri_1a2a757e6afcdf6b68678d6e0693eda59c" kindref="member">libnokogiri::link_type_t</ref> for possible values.</para></listitem></itemizedlist>
</para><para>The most recent version for pcap is 2.4. </para>    </detaileddescription>
    <location file="pcap/header.hh" line="87" column="1" bodyfile="pcap/header.hh" bodystart="87" bodyend="148"/>
    <listofallmembers>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1a22f5055178b1fbf5e96e2b6083b3e41f" prot="private" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>_network</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1a2752da22e31dd414bb030a0d6032251c" prot="private" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>_pcklen_max</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1aa1853b161fb92358f1f4a204c90b2193" prot="private" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>_timestamp_figs</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1a8bf6552f1c10bb96d3011f2dcd6b6daa" prot="private" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>_tz_offset</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1a40dea01fe03159bc73a8926ac56828ce" prot="private" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>_variant</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1a7c52ada14ef3811600151f9e1c0d74aa" prot="private" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>_version</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1a0070077193cf63cf880682939c677d52" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>file_header_t</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1a29ce345c0f92aeee73c51bc120a1f395" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>file_header_t</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1a8f8b2b0ab6e3d947863466876930acd1" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>file_header_t</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1a16a6ced1c65aafb6562f647b76604eec" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>file_header_t</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1ac96e39eb2628892ad874907b6ba9c85b" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>link_type</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1a3cfc12e8f5c82ca93168acf12925a6e7" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>link_type</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1a0785987b4eacff38c639e2b6b0746dd9" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>max_packet_length</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1a246411e8af5b5bf72db3af082f9843c1" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>max_packet_length</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1a97b3fef9925718e72ec69c8ad896bfb3" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>operator=</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1a3e1e2887f1387173b8bc8ad22517bdfb" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>operator=</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1a847b846fa2e02698b81d490378752e4a" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>timestamp_accuracy</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1a2286c25c16b34cab79cd6cecf8a22b18" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>timestamp_accuracy</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1a82e65553181db7fbb1d6d38fb7ab91d1" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>timezone_offset</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1a4547526b226ca8a10b1539b59133ce3b" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>timezone_offset</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1a52c221285b6e40d34e785561bbef8f63" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>variant</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1ab2b308414f764685b36eccd48545bfff" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>variant</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1a8f5d56e0c357dd9a8d4148c331e5223e" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>version</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1file__header__t_1a4158712947e8adb2936fa17ea0333187" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::file_header_t</scope><name>version</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
