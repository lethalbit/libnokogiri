<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structlibnokogiri_1_1pcap_1_1pcap__t" kind="struct" language="C++" prot="public" final="yes">
    <compoundname>libnokogiri::pcap::pcap_t</compoundname>
    <includes refid="pcap_8hh" local="no">pcap.hh</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structlibnokogiri_1_1pcap_1_1pcap__t_1ac65083de1f68a70d7a5bd12dd12f0d87" prot="public" static="no">
        <type>libnokogiri::internal::bi_iterator&lt; std::optional&lt; std::reference_wrapper&lt; <ref refid="structlibnokogiri_1_1pcap_1_1packet__t" kindref="compound">packet_t</ref> &gt; &gt;, <ref refid="structlibnokogiri_1_1pcap_1_1packet__storage__t" kindref="compound">packet_storage_t</ref>, std::vector&lt; <ref refid="structlibnokogiri_1_1pcap_1_1packet__storage__t" kindref="compound">packet_storage_t</ref> &gt;::iterator &gt;</type>
        <definition>using libnokogiri::pcap::pcap_t::iterator_t =  libnokogiri::internal::bi_iterator&lt; std::optional&lt;std::reference_wrapper&lt;packet_t&gt; &gt;, packet_storage_t, std::vector&lt;packet_storage_t&gt;::iterator &gt;</definition>
        <argsstring></argsstring>
        <name>iterator_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="34" column="1" bodyfile="pcap.hh" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structlibnokogiri_1_1pcap_1_1pcap__t_1a21eda2811ed97c1437cdd2db858b59a9" prot="private" static="no" mutable="no">
        <type>libnokogiri::internal::fd_t</type>
        <definition>libnokogiri::internal::fd_t libnokogiri::pcap::pcap_t::_file</definition>
        <argsstring></argsstring>
        <name>_file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="41" column="1" bodyfile="pcap.hh" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibnokogiri_1_1pcap_1_1pcap__t_1a9843f899dab18585fd7b9803370877f8" prot="private" static="no" mutable="no">
        <type><ref refid="namespacelibnokogiri_1a5d8388038cdb5669c9bb66e38214cd44" kindref="member">captrue_compression_t</ref></type>
        <definition>captrue_compression_t libnokogiri::pcap::pcap_t::_compression</definition>
        <argsstring></argsstring>
        <name>_compression</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="42" column="1" bodyfile="pcap.hh" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibnokogiri_1_1pcap_1_1pcap__t_1a9f5a71d33263eca2b67448f3494ad804" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libnokogiri::pcap::pcap_t::_readonly</definition>
        <argsstring></argsstring>
        <name>_readonly</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="43" column="1" bodyfile="pcap.hh" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibnokogiri_1_1pcap_1_1pcap__t_1afdfcec37817c8c10cb246f66733e4975" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libnokogiri::pcap::pcap_t::_prefetch</definition>
        <argsstring></argsstring>
        <name>_prefetch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="44" column="1" bodyfile="pcap.hh" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibnokogiri_1_1pcap_1_1pcap__t_1aca9062af7560e0c273ffbfa0fdd61a51" prot="private" static="no" mutable="no">
        <type><ref refid="structlibnokogiri_1_1pcap_1_1file__header__t" kindref="compound">file_header_t</ref></type>
        <definition>file_header_t libnokogiri::pcap::pcap_t::_header</definition>
        <argsstring></argsstring>
        <name>_header</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="45" column="1" bodyfile="pcap.hh" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibnokogiri_1_1pcap_1_1pcap__t_1aea045ebb59fb3384f414bdd1be8be611" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libnokogiri::pcap::pcap_t::_valid</definition>
        <argsstring></argsstring>
        <name>_valid</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="47" column="1" bodyfile="pcap.hh" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibnokogiri_1_1pcap_1_1pcap__t_1a6d86f1142aee33d6430a7ca7a2029e00" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool libnokogiri::pcap::pcap_t::_needs_swapping</definition>
        <argsstring></argsstring>
        <name>_needs_swapping</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="48" column="1" bodyfile="pcap.hh" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibnokogiri_1_1pcap_1_1pcap__t_1a3076468e81ae7fe1cb4b3ec361e054d1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structlibnokogiri_1_1pcap_1_1packet__storage__t" kindref="compound">packet_storage_t</ref> &gt;</type>
        <definition>std::vector&lt;packet_storage_t&gt; libnokogiri::pcap::pcap_t::_packets</definition>
        <argsstring></argsstring>
        <name>_packets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="50" column="1" bodyfile="pcap.hh" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1a7d47e094eb8ce5fe4496eefbbc460ec1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool libnokogiri::pcap::pcap_t::read_header</definition>
        <argsstring>() noexcept</argsstring>
        <name>read_header</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="52" column="1" bodyfile="pcap.cc" bodystart="51" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1a995849341347cb6fe23b0bcb76d829dc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool libnokogiri::pcap::pcap_t::ingest_packets</definition>
        <argsstring>() noexcept</argsstring>
        <name>ingest_packets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="53" column="1" bodyfile="pcap.cc" bodystart="171" bodyend="194"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1a4c093bdcb1662933a63ab64a984b5b3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr libnokogiri::pcap::pcap_t::pcap_t</definition>
        <argsstring>()=delete</argsstring>
        <name>pcap_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1ab0128fbb81739002036ebe5013a73fea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>libnokogiri::pcap::pcap_t::pcap_t</definition>
        <argsstring>(libnokogiri::internal::fs::path &amp;file, captrue_compression_t compression, bool read_only, bool prefetch=false) noexcept</argsstring>
        <name>pcap_t</name>
        <param>
          <type>libnokogiri::internal::fs::path &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="namespacelibnokogiri_1a5d8388038cdb5669c9bb66e38214cd44" kindref="member">captrue_compression_t</ref></type>
          <declname>compression</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>read_only</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>prefetch</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Construct a new pcap file container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the pcap file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compression</parametername>
</parameternamelist>
<parameterdescription>
<para>The compression mode for the pcap file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>read_only</parametername>
</parameternamelist>
<parameterdescription>
<para>Open the pcap file in read only </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prefetch</parametername>
</parameternamelist>
<parameterdescription>
<para>Rather than initially building a packet index and then doing I/O to get each packet, ingest all packets at once, this trades memory usage for speed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="64" column="1" bodyfile="pcap.cc" bodystart="19" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1af60e88a1b11c9b140a8734e44dd23af1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>libnokogiri::pcap::pcap_t::pcap_t</definition>
        <argsstring>(const pcap_t &amp;)=delete</argsstring>
        <name>pcap_t</name>
        <param>
          <type>const <ref refid="structlibnokogiri_1_1pcap_1_1pcap__t" kindref="compound">pcap_t</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1aa558e8a88c4b13a6549a291bc773d7ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlibnokogiri_1_1pcap_1_1pcap__t" kindref="compound">pcap_t</ref> &amp;</type>
        <definition>pcap_t&amp; libnokogiri::pcap::pcap_t::operator=</definition>
        <argsstring>(const pcap_t &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structlibnokogiri_1_1pcap_1_1pcap__t" kindref="compound">pcap_t</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1ab56e568272155aa141cbf918cf7b11c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>libnokogiri::pcap::pcap_t::pcap_t</definition>
        <argsstring>(pcap_t &amp;&amp;capture) noexcept</argsstring>
        <name>pcap_t</name>
        <param>
          <type><ref refid="structlibnokogiri_1_1pcap_1_1pcap__t" kindref="compound">pcap_t</ref> &amp;&amp;</type>
          <declname>capture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="69" column="1" bodyfile="pcap.hh" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1a13a350c072d00bef3cb6217cfafddadf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void libnokogiri::pcap::pcap_t::operator=</definition>
        <argsstring>(pcap_t &amp;&amp;capture) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structlibnokogiri_1_1pcap_1_1pcap__t" kindref="compound">pcap_t</ref> &amp;&amp;</type>
          <declname>capture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="72" column="1" bodyfile="pcap.hh" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1a7d94420f48cf3ab6a19a0108fe3952d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool libnokogiri::pcap::pcap_t::needs_swapping</definition>
        <argsstring>() const noexcept</argsstring>
        <name>needs_swapping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="75" column="1" bodyfile="pcap.hh" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1a48698606d7c3241c8020dd42e17b205f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlibnokogiri_1_1pcap_1_1file__header__t" kindref="compound">file_header_t</ref></type>
        <definition>file_header_t libnokogiri::pcap::pcap_t::header</definition>
        <argsstring>() const noexcept</argsstring>
        <name>header</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="78" column="1" bodyfile="pcap.hh" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1a2fa934e4752d85344e4e98471cfe5200" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void libnokogiri::pcap::pcap_t::header</definition>
        <argsstring>(file_header_t header) noexcept</argsstring>
        <name>header</name>
        <param>
          <type><ref refid="structlibnokogiri_1_1pcap_1_1file__header__t" kindref="compound">file_header_t</ref></type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="79" column="1" bodyfile="pcap.hh" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1a389ae2788440f4de58a4c4283dbd5189" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacelibnokogiri_1a5d8388038cdb5669c9bb66e38214cd44" kindref="member">captrue_compression_t</ref></type>
        <definition>captrue_compression_t libnokogiri::pcap::pcap_t::compression_type</definition>
        <argsstring>() const noexcept</argsstring>
        <name>compression_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="82" column="1" bodyfile="pcap.hh" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1a624508a386dee71fc91d38fa4f91838f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool libnokogiri::pcap::pcap_t::valid</definition>
        <argsstring>() const noexcept</argsstring>
        <name>valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="85" column="1" bodyfile="pcap.hh" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1a989c5b8cdfe656150db8fc31c8c751c9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t libnokogiri::pcap::pcap_t::packet_count</definition>
        <argsstring>() const noexcept</argsstring>
        <name>packet_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="88" column="1" bodyfile="pcap.hh" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1aa1190f98e7361801caf17be474a0b773" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto libnokogiri::pcap::pcap_t::begin</definition>
        <argsstring>() const noexcept</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="90" column="1" bodyfile="pcap.hh" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1a73464269e055588e4ecfdd6e8d2e22b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto libnokogiri::pcap::pcap_t::end</definition>
        <argsstring>() const noexcept</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="91" column="1" bodyfile="pcap.hh" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1ae6d03862d6946c388d2034c6a925b094" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool libnokogiri::pcap::pcap_t::save</definition>
        <argsstring>() const noexcept</argsstring>
        <name>save</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1a4ff30ae42107430821aa438774716ca1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void libnokogiri::pcap::pcap_t::swap</definition>
        <argsstring>(pcap_t &amp;desc) noexcept</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="structlibnokogiri_1_1pcap_1_1pcap__t" kindref="compound">pcap_t</ref> &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="96" column="1" bodyfile="pcap.hh" bodystart="96" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1a7e1db35d89ea5cec48ff22a1adf00a76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::optional&lt; std::reference_wrapper&lt; <ref refid="structlibnokogiri_1_1pcap_1_1packet__t" kindref="compound">packet_t</ref> &gt; &gt;</type>
        <definition>std::optional&lt;std::reference_wrapper&lt;packet_t&gt; &gt; libnokogiri::pcap::pcap_t::get_packet</definition>
        <argsstring>(std::size_t idx) noexcept</argsstring>
        <name>get_packet</name>
        <param>
          <type>std::size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="104" column="1" bodyfile="pcap.hh" bodystart="104" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1a8a287c9108a3d39af89707f43f63eb49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; std::reference_wrapper&lt; <ref refid="structlibnokogiri_1_1pcap_1_1packet__t" kindref="compound">packet_t</ref> &gt; &gt;</type>
        <definition>std::optional&lt; std::reference_wrapper&lt; packet_t &gt; &gt; libnokogiri::pcap::pcap_t::get_packet</definition>
        <argsstring>(packet_storage_t &amp;pkt_storage) noexcept</argsstring>
        <name>get_packet</name>
        <param>
          <type><ref refid="structlibnokogiri_1_1pcap_1_1packet__storage__t" kindref="compound">packet_storage_t</ref> &amp;</type>
          <declname>pkt_storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="111" column="1" bodyfile="pcap.cc" bodystart="196" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1afe7af361095b99410360517323261967" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator_t</type>
        <definition>iterator_t libnokogiri::pcap::pcap_t::begin</definition>
        <argsstring>() noexcept</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="113" column="1" bodyfile="pcap.hh" bodystart="113" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="structlibnokogiri_1_1pcap_1_1pcap__t_1a82ada2736ee028f8322d705385f4dae8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator_t</type>
        <definition>iterator_t libnokogiri::pcap::pcap_t::end</definition>
        <argsstring>() noexcept</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pcap.hh" line="119" column="1" bodyfile="pcap.hh" bodystart="119" bodyend="123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>pcap file container </para>    </briefdescription>
    <detaileddescription>
<para>This structure contains the machinery to read, write, and edit pcap files.</para><para>The structure of a pcap file is a file header (pcap_header_t) followed by a collection of packet header and packet data pairs. This is all optionally gz compressed. </para>    </detaileddescription>
    <location file="pcap.hh" line="32" column="1" bodyfile="pcap.hh" bodystart="32" bodyend="124"/>
    <listofallmembers>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1a9843f899dab18585fd7b9803370877f8" prot="private" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>_compression</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1a21eda2811ed97c1437cdd2db858b59a9" prot="private" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>_file</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1aca9062af7560e0c273ffbfa0fdd61a51" prot="private" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>_header</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1a6d86f1142aee33d6430a7ca7a2029e00" prot="private" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>_needs_swapping</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1a3076468e81ae7fe1cb4b3ec361e054d1" prot="private" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>_packets</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1afdfcec37817c8c10cb246f66733e4975" prot="private" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>_prefetch</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1a9f5a71d33263eca2b67448f3494ad804" prot="private" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>_readonly</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1aea045ebb59fb3384f414bdd1be8be611" prot="private" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>_valid</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1aa1190f98e7361801caf17be474a0b773" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>begin</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1afe7af361095b99410360517323261967" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>begin</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1a389ae2788440f4de58a4c4283dbd5189" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>compression_type</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1a73464269e055588e4ecfdd6e8d2e22b4" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>end</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1a82ada2736ee028f8322d705385f4dae8" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>end</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1a7e1db35d89ea5cec48ff22a1adf00a76" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>get_packet</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1a8a287c9108a3d39af89707f43f63eb49" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>get_packet</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1a48698606d7c3241c8020dd42e17b205f" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>header</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1a2fa934e4752d85344e4e98471cfe5200" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>header</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1a995849341347cb6fe23b0bcb76d829dc" prot="private" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>ingest_packets</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1ac65083de1f68a70d7a5bd12dd12f0d87" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>iterator_t</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1a7d94420f48cf3ab6a19a0108fe3952d0" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>needs_swapping</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1aa558e8a88c4b13a6549a291bc773d7ea" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>operator=</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1a13a350c072d00bef3cb6217cfafddadf" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>operator=</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1a989c5b8cdfe656150db8fc31c8c751c9" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>packet_count</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1a4c093bdcb1662933a63ab64a984b5b3d" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>pcap_t</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1ab0128fbb81739002036ebe5013a73fea" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>pcap_t</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1af60e88a1b11c9b140a8734e44dd23af1" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>pcap_t</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1ab56e568272155aa141cbf918cf7b11c5" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>pcap_t</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1a7d47e094eb8ce5fe4496eefbbc460ec1" prot="private" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>read_header</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1ae6d03862d6946c388d2034c6a925b094" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>save</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1a4ff30ae42107430821aa438774716ca1" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>swap</name></member>
      <member refid="structlibnokogiri_1_1pcap_1_1pcap__t_1a624508a386dee71fc91d38fa4f91838f" prot="public" virt="non-virtual"><scope>libnokogiri::pcap::pcap_t</scope><name>valid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
